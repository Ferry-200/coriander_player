// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.20.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// 扫描给定的多个目录，建立索引并导出到index_path/index.json
Future<void> buildIndexFromPaths(
        {required List<String> paths,
        required String indexPath,
        dynamic hint}) =>
    RustLib.instance.api
        .buildIndexFromPaths(paths: paths, indexPath: indexPath, hint: hint);

/// 解析给定的MP3文件中id3v2，返回USLT帧的内容
Future<String?> loadLyricFromMp3({required String path, dynamic hint}) =>
    RustLib.instance.api.loadLyricFromMp3(path: path, hint: hint);

/// 解析给定flac文件中的vorbis comments，返回LYRICS字段的内容
Future<String?> loadLyricFromFlac({required String path, dynamic hint}) =>
    RustLib.instance.api.loadLyricFromFlac(path: path, hint: hint);

/// 给定音乐文件的路径，返回相同路径下同名的lrc文件的内容
Future<String?> loadLyricFromLrc({required String path, dynamic hint}) =>
    RustLib.instance.api.loadLyricFromLrc(path: path, hint: hint);

/// 给定音乐文件的路径，返回图像的数据
Future<Uint8List?> loadCoverBytes({required String path, dynamic hint}) =>
    RustLib.instance.api.loadCoverBytes(path: path, hint: hint);

/// 读取并更新index_path/index.json
Future<void> updateIndex({required String indexPath, dynamic hint}) =>
    RustLib.instance.api.updateIndex(indexPath: indexPath, hint: hint);
