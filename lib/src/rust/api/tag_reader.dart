// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.32.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `Audio` is not used by any `pub` functions, thus it is ignored.
// The type `AudioFolder` is not used by any `pub` functions, thus it is ignored.

/// for Flutter
/// 扫描给定路径下所有子文件夹（包括自己）的音乐文件并把索引保存在 index_path/index.json。
/// true：成功；false：失败
Future<bool> buildIndexFromPath(
        {required String path, required String indexPath, dynamic hint}) =>
    RustLib.instance.api
        .buildIndexFromPath(path: path, indexPath: indexPath, hint: hint);

/// for Flutter
/// 读取 index_path/index.json，检查更新。不可能重新读取被修改的文件夹下所有的音乐标签，这样太耗时。
///
/// [LOWEST_VERSION] 指定可以继承的 index 的最低版本。
/// 如果 index version < [LOWEST_VERSION] 或者是 index 根本没有 version 再或者格式不符合要求，就转到
/// [_update_index_below_1_1_0] 更新 index；
/// 如果 index version >= [LOWEST_VERSION] 则进行更新。
///
/// 如果文件夹不存在，删除记录。
/// 如果文件夹被修改（再次读取到的 modified > 记录的 modified），就更新它。没有则跳过它
/// 1. 遍历该文件夹索引，判断文件是否存在，不存在则删除记录
/// 2. 遍历该文件夹索引，如果文件被修改（再次读取到的 modified > 记录的 modified），重新读取标签；没有则跳过它
/// 3. 遍历该文件夹，添加新增（读取到的 created > 记录的 latest）的音乐文件
Future<bool> updateIndex({required String indexPath, dynamic hint}) =>
    RustLib.instance.api.updateIndex(indexPath: indexPath, hint: hint);

/// for Flutter
/// 只支持读取 ID3V2, VorbisComment, Mp4Ilst 存储的歌词
Future<String?> getLyricFromPath({required String path, dynamic hint}) =>
    RustLib.instance.api.getLyricFromPath(path: path, hint: hint);

/// for Flutter
/// TODO: 如果无法通过 Lofty 获取则使用 Windows 获取
Future<Uint8List?> getPictureFromPath({required String path, dynamic hint}) =>
    RustLib.instance.api.getPictureFromPath(path: path, hint: hint);
